architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/${project.mod_id}.accesswidener")
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    implementation "com.electronwill.night-config:core:${rootProject.nightconfig_version}"
    implementation "com.electronwill.night-config:toml:${rootProject.nightconfig_version}"

    implementation(annotationProcessor("com.github.llamalad7.mixinextras:mixinextras-common:${rootProject.mixinextras_version}"))
}

processResources {
    inputs.property "mod_id", project.mod_id

    filesMatching(["architectury.common.json"]) {
        expand "mod_id": project.mod_id
    }
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archivesBaseName
            from components.java
        }
    }

    repositories {
        if (System.getenv("MAVEN_PASSWORD") != null) {
            maven {
                url = "https://maven.stevenplayzz.studio/releases"
                credentials {
                    username = "teamaurora"
                    password = "aroruamate"
                }
            }
        }
    }
}
